<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.mapper.RoleMapper">
    <select id="findAllRole" parameterType="role" resultType="role">
        select * from roles
        <where>
            <if test="name !=null and name !=''">
                and name=#{name}
            </if>
        </where>
    </select>
    <insert id="saveRole" parameterType="role">
        insert into roles(name,code,description,created_time,updated_time,created_by,updated_by)
        values(#{name},#{code},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>
    <update id="updateRole" parameterType="role">
        update roles set name=#{name},code=#{code},description=#{description},
        updated_time=#{updatedTime},updated_by=#{updatedBy} where id=#{id}
    </update>
    <select id="findMenuIdByRoleId" parameterType="int" resultType="int">
        select m.id
        from roles r inner join role_menu_relation rm on r.id=rm.role_id
        inner join menu m on m.id=rm.menu_id where r.id=#{roleId}
    </select>
    <delete id="deleteRoleMenuContext" parameterType="int">
        delete from role_menu_relation where role_id=#{roleId}
    </delete>
    <insert id="saveRoleMenuContext" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation(menu_id,role_id,created_time,updated_time,created_by,updated_by)
        values(#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>
    <delete id="deleteRole" parameterType="int">
        delete from roles where id=#{id}
    </delete>

    <resultMap id="roleResourceMap" type="com.lagou.domain.ResourceCategory">
    <id property="id" column="id"></id>
    <result property="name" column="name"></result>
        <result property="sort" column="sort"></result>
        <result property="createdTime" column="created_time"></result>
        <result property="updatedTime" column="updated_time"></result>
        <result property="createdBy" column="created_by"></result>
        <result property="updatedBy" column="updated_by"></result>
        <collection property="resourceList" ofType="com.lagou.domain.Resource">
            <id property="id" column="rid"></id>
            <result property="name" column="rname"></result>
            <result property="url" column="url"></result>
            <result property="categoryId" column="category_id"></result>
            <result property="description" column="description"></result>
            <result property="createdTime" column="rcreated_time"></result>
            <result property="updatedTime" column="rupdated_time"></result>
            <result property="createdBy" column="rcreated_by"></result>
            <result property="updatedBy" column="rupdated_by"></result>
        </collection>
    </resultMap>
    <select id="findResourceListByRoleId" parameterType="int" resultMap="roleResourceMap">
    SELECT rc.*,r.id rid,r.name rname,r.url,r.category_id,r.description,r.created_time rcreated_time,r.updated_time rupdated_time,r.created_by rcreated_by,r.updated_by rupdated_by
    FROM role_resource_relation rrr INNER JOIN resource r ON r.id=rrr.resource_id
    INNER JOIN resource_category rc ON r.category_id=rc.id
    WHERE rrr.role_id=#{roleId}
    </select>
    
    <delete id="deleteRoleResourceContext" parameterType="int">
        delete from role_resource_relation
        where role_id=#{roleId}
    </delete>
    <insert id="saveRoleResourceContext" parameterType="role_resource_relation">
        insert into role_resource_relation(resource_id,role_id,created_time,updated_time,created_by,updated_by)
        values(#{resourceId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>
</mapper>